% close all, clear all
% vocales = ['a';'e';'i';'o';'u'];  
% r = audiorecorder (8000,16,1);
% 
% inicio = input(['Presione algo para iniciar con la vocal ' vocales(1)]);
% LPC_C = zeros(12,25);
% for j=1:5
% for i=1:25
%     record(r);
%     vacio = input('Presione algo ');
%     stop(r);
%     LPC_C(:,i) = LPCx(getaudiodata(r).*hamming(length(getaudiodata(r))));
% end
% switch j
%    case 1      
%     save A.mat LPC_C;%Crea el archivo de la base de datos
%     break
%    case 2      
%     save E.mat LPC_C;%Crea el archivo de la base de datos
%     break
%    case 3      
%     save I.mat LPC_C;%Crea el archivo de la base de datos
%     break
%    case 4      
%     save O.mat LPC_C;%Crea el archivo de la base de datos
%     break
%    case 5      
%     save U.mat LPC_C;%Crea el archivo de la base de datos
%     break
%    otherwise
%       break
% end
%     if(j<5)
%     descanso = input(['Presione algo para continuar con la letra ' vocales(j+1)]);
%     end
% end

%M=csvread('filename.csv')
%save('filename.mat','M')

close all, clear all

vocal = input('Presione 1->a 1->a 1->a 4->o 5->u?')
vocales = ['a';'e';'i';'o';'u'];  
r = audiorecorder (8000,16,1);

inicio = input(['Presione algo para iniciar con la vocal ' vocales(1)]);
LPC_C = zeros(12,25);
for j=1:5
for i=1:25
    record(r);
    vacio = input('Presione algo ');
    stop(r);
    LPC_C(:,i) = LPCx(getaudiodata(r).*hamming(length(getaudiodata(r))));
end
switch j
   case 1      
    save A.mat LPC_C;%Crea el archivo de la base de datos
    break
   case 2      
    save E.mat LPC_C;%Crea el archivo de la base de datos
    break
   case 3      
    save I.mat LPC_C;%Crea el archivo de la base de datos
    break
   case 4      
    save O.mat LPC_C;%Crea el archivo de la base de datos
    break
   case 5      
    save U.mat LPC_C;%Crea el archivo de la base de datos
    break
   otherwise
      break
end
    if(j<5)
    descanso = input(['Presione algo para continuar con la letra ' vocales(j+1)]);
    end
end
